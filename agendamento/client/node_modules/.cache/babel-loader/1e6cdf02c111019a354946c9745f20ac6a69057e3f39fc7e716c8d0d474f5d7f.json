{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\natha\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\AREA DE TRABALHO\\\\agendamentoRENDER\\\\agendamento\\\\client\\\\src\\\\pages\\\\ClientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport api, { setAuthToken } from '../services/api';\nimport AppointmentForm from '../components/AppointmentForm'; // Importa o novo componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClientDashboard() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [services, setServices] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  const [professionals, setProfessionals] = useState([]);\n  const [selectedService, setSelectedService] = useState(null);\n  const [selectedProfessional, setSelectedProfessional] = useState(null);\n  const [availableHours, setAvailableHours] = useState([]);\n  const [selectedDate, setSelectedDate] = useState('');\n  const [selectedHour, setSelectedHour] = useState('');\n  const [showAppointmentsModal, setShowAppointmentsModal] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = JSON.parse(localStorage.getItem('user'));\n    if (!token || !userData || userData.role !== 'user') {\n      navigate('/login');\n    } else {\n      setUser(userData);\n      setAuthToken(token);\n      fetchServices();\n      fetchMyAppointments();\n      fetchProfessionals();\n    }\n  }, [navigate]);\n  const fetchServices = async () => {\n    try {\n      const response = await api.get('/public/services');\n      setServices(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar serviços:', error);\n    }\n  };\n  const fetchProfessionals = async () => {\n    try {\n      const response = await api.get('/public/professionals');\n      setProfessionals(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar profissionais:', error);\n    }\n  };\n  const fetchAvailableHours = async (professionalId, date) => {\n    try {\n      const response = await api.get(`/public/available-hours?professionalId=${professionalId}&date=${date}`);\n      setAvailableHours(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar horários:', error);\n      setAvailableHours([]);\n    }\n  };\n  const fetchMyAppointments = async () => {\n    try {\n      const response = await api.get('/appointments');\n      setAppointments(response.data);\n    } catch (error) {\n      console.error('Erro ao buscar meus agendamentos:', error);\n    }\n  };\n  const handleBookingSubmit = async (title, notes) => {\n    if (!selectedService || !selectedProfessional || !selectedHour) {\n      alert('Por favor, selecione um serviço, profissional e horário.');\n      return;\n    }\n    try {\n      const appointmentDate = new Date(selectedHour);\n      const newAppointment = {\n        title: title,\n        date: appointmentDate.toISOString(),\n        notes: notes,\n        professionalId: selectedProfessional._id,\n        serviceId: selectedService._id\n      };\n      await api.post('/appointments', newAppointment);\n      alert('Agendamento criado com sucesso!');\n      setSelectedService(null);\n      setSelectedProfessional(null);\n      setSelectedDate('');\n      setSelectedHour('');\n      setAvailableHours([]);\n      fetchMyAppointments();\n    } catch (error) {\n      console.error('Erro ao agendar:', error);\n      alert('Erro ao criar agendamento. Tente novamente.');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.clear();\n    setAuthToken(null);\n    navigate('/login');\n  };\n  const handleDateChange = e => {\n    const newDate = e.target.value;\n    setSelectedDate(newDate);\n    if (selectedProfessional) {\n      fetchAvailableHours(selectedProfessional._id, newDate);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"navbar navbar-expand-lg navbar-light bg-light\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"navbar-brand\",\n          children: \"Dashboard do Cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-info\",\n            onClick: () => setShowAppointmentsModal(true),\n            children: \"Meus Agendamentos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: handleLogout,\n            children: \"Sair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [user && /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Bem-vindo, \", user.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"lead\",\n        children: \"Selecione um servi\\xE7o e um hor\\xE1rio para agendar.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"1. Selecione um Servi\\xE7o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap gap-2\",\n            children: services.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Nenhum servi\\xE7o dispon\\xEDvel no momento.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this) : services.map(service => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn ${(selectedService === null || selectedService === void 0 ? void 0 : selectedService._id) === service._id ? 'btn-primary' : 'btn-outline-primary'}`,\n              onClick: () => setSelectedService(service),\n              children: service.name\n            }, service._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), selectedService && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: \"2. Selecione um Profissional\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: professionals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Nenhum profissional dispon\\xEDvel.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex flex-wrap gap-2\",\n            children: professionals.map(prof => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `btn ${(selectedProfessional === null || selectedProfessional === void 0 ? void 0 : selectedProfessional._id) === prof._id ? 'btn-primary' : 'btn-outline-primary'}`,\n              onClick: () => setSelectedProfessional(prof),\n              children: prof.name\n            }, prof._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 21\n      }, this), selectedProfessional && /*#__PURE__*/_jsxDEV(AppointmentForm, {\n        selectedService: selectedService,\n        selectedProfessional: selectedProfessional,\n        selectedHour: selectedHour,\n        availableHours: availableHours,\n        onBookingSubmit: handleBookingSubmit,\n        onDateChange: handleDateChange,\n        onHourSelect: setSelectedHour\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), showAppointmentsModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal show d-block\",\n      style: {\n        backgroundColor: 'rgba(0,0,0,0.5)'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-dialog modal-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-header\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"modal-title\",\n              children: \"Meus Agendamentos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-close\",\n              onClick: () => setShowAppointmentsModal(false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"modal-body\",\n            children: appointments.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Voc\\xEA n\\xE3o tem agendamentos.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group\",\n              children: appointments.map(ap => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: \"list-group-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: ap.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 52\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Data: \", new Date(ap.date).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 49\n                }, this)]\n              }, ap._id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n}\n_s(ClientDashboard, \"i9afw0mIL+eCJ4IuT9ceABT7xOw=\", false, function () {\n  return [useNavigate];\n});\n_c = ClientDashboard;\nvar _c;\n$RefreshReg$(_c, \"ClientDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","api","setAuthToken","AppointmentForm","jsxDEV","_jsxDEV","ClientDashboard","_s","user","setUser","services","setServices","appointments","setAppointments","professionals","setProfessionals","selectedService","setSelectedService","selectedProfessional","setSelectedProfessional","availableHours","setAvailableHours","selectedDate","setSelectedDate","selectedHour","setSelectedHour","showAppointmentsModal","setShowAppointmentsModal","navigate","token","localStorage","getItem","userData","JSON","parse","role","fetchServices","fetchMyAppointments","fetchProfessionals","response","get","data","error","console","fetchAvailableHours","professionalId","date","handleBookingSubmit","title","notes","alert","appointmentDate","Date","newAppointment","toISOString","_id","serviceId","post","handleLogout","clear","handleDateChange","e","newDate","target","value","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","name","length","map","service","prof","onBookingSubmit","onDateChange","onHourSelect","style","backgroundColor","type","ap","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/natha/OneDrive/Área de Trabalho/AREA DE TRABALHO/agendamentoRENDER/agendamento/client/src/pages/ClientDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport api, { setAuthToken } from '../services/api';\r\nimport AppointmentForm from '../components/AppointmentForm'; // Importa o novo componente\r\n\r\nexport default function ClientDashboard() {\r\n    const [user, setUser] = useState(null);\r\n    const [services, setServices] = useState([]);\r\n    const [appointments, setAppointments] = useState([]);\r\n    const [professionals, setProfessionals] = useState([]);\r\n    const [selectedService, setSelectedService] = useState(null);\r\n    const [selectedProfessional, setSelectedProfessional] = useState(null);\r\n    const [availableHours, setAvailableHours] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState('');\r\n    const [selectedHour, setSelectedHour] = useState('');\r\n    const [showAppointmentsModal, setShowAppointmentsModal] = useState(false);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('token');\r\n        const userData = JSON.parse(localStorage.getItem('user'));\r\n\r\n        if (!token || !userData || userData.role !== 'user') {\r\n            navigate('/login');\r\n        } else {\r\n            setUser(userData);\r\n            setAuthToken(token);\r\n            fetchServices();\r\n            fetchMyAppointments();\r\n            fetchProfessionals();\r\n        }\r\n    }, [navigate]);\r\n\r\n    const fetchServices = async () => {\r\n        try {\r\n            const response = await api.get('/public/services');\r\n            setServices(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar serviços:', error);\r\n        }\r\n    };\r\n\r\n    const fetchProfessionals = async () => {\r\n        try {\r\n            const response = await api.get('/public/professionals');\r\n            setProfessionals(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar profissionais:', error);\r\n        }\r\n    };\r\n\r\n    const fetchAvailableHours = async (professionalId, date) => {\r\n        try {\r\n            const response = await api.get(`/public/available-hours?professionalId=${professionalId}&date=${date}`);\r\n            setAvailableHours(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar horários:', error);\r\n            setAvailableHours([]);\r\n        }\r\n    };\r\n\r\n    const fetchMyAppointments = async () => {\r\n        try {\r\n            const response = await api.get('/appointments');\r\n            setAppointments(response.data);\r\n        } catch (error) {\r\n            console.error('Erro ao buscar meus agendamentos:', error);\r\n        }\r\n    };\r\n\r\n    const handleBookingSubmit = async (title, notes) => {\r\n        if (!selectedService || !selectedProfessional || !selectedHour) {\r\n            alert('Por favor, selecione um serviço, profissional e horário.');\r\n            return;\r\n        }\r\n        try {\r\n            const appointmentDate = new Date(selectedHour);\r\n\r\n            const newAppointment = {\r\n                title: title,\r\n                date: appointmentDate.toISOString(),\r\n                notes: notes,\r\n                professionalId: selectedProfessional._id,\r\n                serviceId: selectedService._id\r\n            };\r\n            await api.post('/appointments', newAppointment);\r\n            alert('Agendamento criado com sucesso!');\r\n\r\n            setSelectedService(null);\r\n            setSelectedProfessional(null);\r\n            setSelectedDate('');\r\n            setSelectedHour('');\r\n            setAvailableHours([]);\r\n            fetchMyAppointments();\r\n        } catch (error) {\r\n            console.error('Erro ao agendar:', error);\r\n            alert('Erro ao criar agendamento. Tente novamente.');\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        localStorage.clear();\r\n        setAuthToken(null);\r\n        navigate('/login');\r\n    };\r\n\r\n    const handleDateChange = (e) => {\r\n        const newDate = e.target.value;\r\n        setSelectedDate(newDate);\r\n        if (selectedProfessional) {\r\n            fetchAvailableHours(selectedProfessional._id, newDate);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container\">\r\n                    <span className=\"navbar-brand\">Dashboard do Cliente</span>\r\n                    <div className=\"d-flex gap-2\">\r\n                        <button className=\"btn btn-info\" onClick={() => setShowAppointmentsModal(true)}>Meus Agendamentos</button>\r\n                        <button className=\"btn btn-danger\" onClick={handleLogout}>Sair</button>\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n            <div className=\"container mt-4\">\r\n                {user && <h1>Bem-vindo, {user.name}!</h1>}\r\n                <p className=\"lead\">Selecione um serviço e um horário para agendar.</p>\r\n\r\n                <div className=\"card mb-4\">\r\n                    <div className=\"card-header\">1. Selecione um Serviço</div>\r\n                    <div className=\"card-body\">\r\n                        <div className=\"d-flex flex-wrap gap-2\">\r\n                            {services.length === 0 ? (\r\n                                <p>Nenhum serviço disponível no momento.</p>\r\n                            ) : (\r\n                                services.map(service => (\r\n                                    <button\r\n                                        key={service._id}\r\n                                        className={`btn ${selectedService?._id === service._id ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                                        onClick={() => setSelectedService(service)}\r\n                                    >\r\n                                        {service.name}\r\n                                    </button>\r\n                                ))\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {selectedService && (\r\n                    <div className=\"card mb-4\">\r\n                        <div className=\"card-header\">2. Selecione um Profissional</div>\r\n                        <div className=\"card-body\">\r\n                            {professionals.length === 0 ? (\r\n                                <p>Nenhum profissional disponível.</p>\r\n                            ) : (\r\n                                <div className=\"d-flex flex-wrap gap-2\">\r\n                                    {professionals.map(prof => (\r\n                                        <button\r\n                                            key={prof._id}\r\n                                            className={`btn ${selectedProfessional?._id === prof._id ? 'btn-primary' : 'btn-outline-primary'}`}\r\n                                            onClick={() => setSelectedProfessional(prof)}\r\n                                        >\r\n                                            {prof.name}\r\n                                        </button>\r\n                                    ))}\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                )}\r\n\r\n                {selectedProfessional && (\r\n                    <AppointmentForm\r\n                        selectedService={selectedService}\r\n                        selectedProfessional={selectedProfessional}\r\n                        selectedHour={selectedHour}\r\n                        availableHours={availableHours}\r\n                        onBookingSubmit={handleBookingSubmit}\r\n                        onDateChange={handleDateChange}\r\n                        onHourSelect={setSelectedHour}\r\n                    />\r\n                )}\r\n            </div>\r\n\r\n            {showAppointmentsModal && (\r\n                <div className=\"modal show d-block\" style={{ backgroundColor: 'rgba(0,0,0,0.5)' }}>\r\n                    <div className=\"modal-dialog modal-lg\">\r\n                        <div className=\"modal-content\">\r\n                            <div className=\"modal-header\">\r\n                                <h5 className=\"modal-title\">Meus Agendamentos</h5>\r\n                                <button type=\"button\" className=\"btn-close\" onClick={() => setShowAppointmentsModal(false)}></button>\r\n                            </div>\r\n                            <div className=\"modal-body\">\r\n                                {appointments.length === 0 ? (\r\n                                    <p>Você não tem agendamentos.</p>\r\n                                ) : (\r\n                                    <ul className=\"list-group\">\r\n                                        {appointments.map(ap => (\r\n                                            <li key={ap._id} className=\"list-group-item\">\r\n                                                <p><strong>{ap.title}</strong></p>\r\n                                                <p>Data: {new Date(ap.date).toLocaleString()}</p>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}